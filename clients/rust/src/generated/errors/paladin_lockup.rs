//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! <https://github.com/kinobi-so/kinobi>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum PaladinLockupError {
    /// 0 - Incorrect mint.
    #[error("Incorrect mint.")]
    IncorrectMint = 0x0,
    /// 1 - Incorrect escrow authority address.
    #[error("Incorrect escrow authority address.")]
    IncorrectEscrowAuthorityAddress = 0x1,
    /// 2 - Incorrect escrow token account.
    #[error("Incorrect escrow token account.")]
    IncorrectEscrowTokenAccount = 0x2,
    /// 3 - Lockup is still active.
    #[error("Lockup is still active.")]
    LockupActive = 0x3,
    /// 4 - Lockup already unlocked.
    #[error("Lockup already unlocked.")]
    LockupAlreadyUnlocked = 0x4,
    /// 5 - Amount too low.
    #[error("Amount too low.")]
    AmountTooLow = 0x5,
}

impl solana_program::program_error::PrintProgramError for PaladinLockupError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

