/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/web3.js';
import {
  type ParsedInitializeLockupPoolInstruction,
  type ParsedLockupInstruction,
  type ParsedUnlockInstruction,
  type ParsedWithdrawInstruction,
} from '../instructions';

export const PALADIN_LOCKUP_PROGRAM_ADDRESS =
  '2fzrtg7ckXTFxjgsXbAWLLvXr4wJK9xfUjJJ69uZ7chb' as Address<'2fzrtg7ckXTFxjgsXbAWLLvXr4wJK9xfUjJJ69uZ7chb'>;

export enum PaladinLockupAccount {
  LockupPool,
  Lockup,
}

export enum PaladinLockupInstruction {
  InitializeLockupPool,
  Lockup,
  Unlock,
  Withdraw,
}

export function identifyPaladinLockupInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): PaladinLockupInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return PaladinLockupInstruction.InitializeLockupPool;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return PaladinLockupInstruction.Lockup;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return PaladinLockupInstruction.Unlock;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return PaladinLockupInstruction.Withdraw;
  }
  throw new Error(
    'The provided instruction could not be identified as a paladinLockup instruction.'
  );
}

export type ParsedPaladinLockupInstruction<
  TProgram extends string = '2fzrtg7ckXTFxjgsXbAWLLvXr4wJK9xfUjJJ69uZ7chb',
> =
  | ({
      instructionType: PaladinLockupInstruction.InitializeLockupPool;
    } & ParsedInitializeLockupPoolInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupInstruction.Lockup;
    } & ParsedLockupInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupInstruction.Unlock;
    } & ParsedUnlockInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupInstruction.Withdraw;
    } & ParsedWithdrawInstruction<TProgram>);
