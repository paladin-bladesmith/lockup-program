/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { containsBytes, getU8Encoder, type Address } from '@solana/web3.js';
import {
  type ParsedInitializeEscrowInstruction,
  type ParsedLockupInstruction,
  type ParsedUnlockInstruction,
  type ParsedWithdrawInstruction,
} from '../instructions';

export const PALADIN_LOCKUP_PROGRAM_PROGRAM_ADDRESS =
  'AAJBV83AXRjN5sEF8gWjyo6mVxLv822Mg1jYp1PZ8MCo' as Address<'AAJBV83AXRjN5sEF8gWjyo6mVxLv822Mg1jYp1PZ8MCo'>;

export enum PaladinLockupProgramAccount {
  Lockup,
}

export enum PaladinLockupProgramInstruction {
  Lockup,
  Unlock,
  Withdraw,
  InitializeEscrow,
}

export function identifyPaladinLockupProgramInstruction(
  instruction: { data: Uint8Array } | Uint8Array
): PaladinLockupProgramInstruction {
  const data =
    instruction instanceof Uint8Array ? instruction : instruction.data;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return PaladinLockupProgramInstruction.Lockup;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return PaladinLockupProgramInstruction.Unlock;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return PaladinLockupProgramInstruction.Withdraw;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return PaladinLockupProgramInstruction.InitializeEscrow;
  }
  throw new Error(
    'The provided instruction could not be identified as a paladinLockupProgram instruction.'
  );
}

export type ParsedPaladinLockupProgramInstruction<
  TProgram extends string = 'AAJBV83AXRjN5sEF8gWjyo6mVxLv822Mg1jYp1PZ8MCo',
> =
  | ({
      instructionType: PaladinLockupProgramInstruction.Lockup;
    } & ParsedLockupInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupProgramInstruction.Unlock;
    } & ParsedUnlockInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupProgramInstruction.Withdraw;
    } & ParsedWithdrawInstruction<TProgram>)
  | ({
      instructionType: PaladinLockupProgramInstruction.InitializeEscrow;
    } & ParsedInitializeEscrowInstruction<TProgram>);
